{"version":3,"sources":["firebase/firebase-config.js","types/types.js","actions/ui.js","helpers/loadFavorites.js","actions/characters.js","actions/auth.js","routers/PublicRoute.js","components/characters/CharacterScreen.js","helpers/checkDuplicate.js","constants.js","hooks/useFetch.js","assets/images/defaultImageCard.jpeg","components/loading/LoadingPreviewCards.js","components/characters/CharacterCard.js","components/characters/CharactersCards.js","components/favorites/FavoritesScreen.js","components/ui/Pagination.js","actions/pages.js","components/home/HomeScreen.js","components/search/SearchScreen.js","components/ui/SearchButton.js","components/ui/MenuPanel.js","assets/images/rick-and-morty-app.png","components/ui/NavBar.js","routers/MainRouter.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","assets/images/RickAndMortyLoadingImage1.png","assets/images/RickAndMortyLoadingImage2.png","components/loading/LoadingScreen.js","routers/AppRouter.js","reducers/charactersReducer.js","reducers/pagesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","types","setError","error","type","payload","startLoading","finishLoading","loadFavorites","uid","a","collection","get","charactersFavoritesSnap","charactersFavorites","forEach","character","data","setCharacters","characters","refreshFavoritesCharacters","startLoadFavoritesCharacters","dispatch","favoritesCharacters","Object","keys","length","doc","set","ids","merge","setFavoritesCharacters","deleteFavoriteCharacter","id","login","displayName","logged","logout","PublicRoute","Component","component","rest","props","CharacterScreen","history","useDispatch","useSelector","state","active","favorites","loading","ui","checkingFavorite","lenght","find","favorite","checkDuplicate","to","className","as","show","enter","enterFrom","enterTo","src","urlImage","alt","name","status","species","gender","origin","location","episode","onClick","goBack","disabled","characterId","toast","getState","update","FieldValue","arrayRemove","dismiss","success","arrayUnion","API_URL","useFetch","url","params","useState","setState","useEffect","console","log","toString","fetch","then","res","json","catch","err","propTypes","PropTypes","string","isRequired","LoadingPreviewCards","map","card","leave","leaveFrom","leaveTo","defaultImageCard","CharacterCard","loadingCards","activeCharacter","CharactersCards","homeCharacters","searchCharacter","useHistory","image","Array","isArray","push","FavoritesScreen","Pagination","setLoadingCards","activePage","pages","URLSearchParams","page","setParams","results","loadCharacters","initialPage","previousLabel","previousClassName","nextLabel","nextClassName","breakLabel","pageClassName","activeClassName","containerClassName","pageCount","info","marginPagesDisplayed","pageRangeDisplayed","onPageChange","newPage","selected","setActivePage","HomeScreen","SearchScreen","searches","SearchButton","setIsShowing","value","setValue","isShow","setIsShow","handleOnSearch","e","key","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","placeholder","onChange","target","onKeyPress","open","Button","Panel","fillRule","clipRule","MenuPanel","classNames","navigation","isShowing","handleLogout","item","index","isLogged","link","current","aria-current","undefined","icon","NavBar","popoverShow","setPopoverShow","btnRef","createRef","popoverRef","classes","filter","Boolean","join","preventDefault","signOut","aria-controls","aria-expanded","logo","createPopper","placement","ref","MainRouter","exact","path","useForm","initialState","formValue","setFormValue","handleInputChange","reset","LoginScreen","email","password","formValues","onSubmit","signInWithEmailAndPassword","user","message","startLoginEmailPassword","autoComplete","signInWithPopup","RegisterScreen","password2","isFormValid","trim","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterEmailPassword","noValidate","AuthRouter","LoadingScreen","rick","morty","Routers","checking","setChecking","setIsLogged","onAuthStateChanged","position","msgError","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","concat","store","createStore","applyMiddleware","thunk","App","AppRouter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8f1b708.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nconst apiKey = process.env.REACT_APP_FIREBASE_API_KEY\n\nconst firebaseConfig = {\n  apiKey: apiKey,\n  authDomain: \"rick-and-morty-app-6a534.firebaseapp.com\",\n  projectId: \"rick-and-morty-app-6a534\",\n  storageBucket: \"rick-and-morty-app-6a534.appspot.com\",\n  messagingSenderId: \"595795154616\",\n  appId: \"1:595795154616:web:acd80a32b00171995d464d\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore()\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider()\n\nexport {\n  db,\n  googleAuthProvider,\n  firebase\n}","\nexport const types = {\n  login: '[Auth] Login',\n  logout: '[Auth] Logout',\n\n  uiSetError: '[UI] Set Error',\n  uiRemoveError: '[UI] Remove Error',\n\n  uiStartLoading: '[UI] Start Loading',\n  uiFinishLoading: '[UI] Finish Loading',\n\n  charactersLoad: '[Characters] Load Characters',\n  charactersActive: '[Characters] Set Active Character',\n  charactersLoadFavorites: '[Characters] Load Favorites Characters',\n  charactersUndoFavorite: '[Characters] Undo Character as Favorite',\n  charactersFavoritesRefresh: '[Characters] Refresh Favorites Characters',\n  charactersSetSearch: '[Characters] Set Search',\n\n  pagesActive: \"[Pages] Set Active Page\"\n}","import { types } from \"../types/types\";\n\nexport const setError = (error) => ({\n  type: types.uiSetError,\n  payload: error\n}) \n\nexport const removeError = () => ({\n  type: types.uiRemoveError\n})\n\nexport const startLoading = () => ({\n  type: types.uiStartLoading\n})\n\nexport const finishLoading = () => ({\n  type: types.uiFinishLoading\n})","import { db } from \"../firebase/firebase-config\"\n\nexport const loadFavorites = async (uid) => {\n  const charactersFavoritesSnap = await db.collection(`${uid}/rick-and-morty/characters`).get()\n  let charactersFavorites = {}\n  charactersFavoritesSnap.forEach((character) => {\n    charactersFavorites = { ...character.data() }\n  })\n  return charactersFavorites\n}","import toast from \"react-hot-toast\"\nimport { db, firebase } from \"../firebase/firebase-config\"\nimport { loadFavorites } from \"../helpers/loadFavorites\"\nimport { types } from '../types/types'\n\nexport const loadCharacters = (data, error) => {\n  return (dispatch) => {\n    if (data) {\n      dispatch(setCharacters(data.results))\n    }\n    if (error) {\n      toast.error(`${error}`)\n    }\n  }\n}\n\nexport const setCharacters = (characters) => ({\n  type: types.charactersLoad,\n  payload: characters\n})\n\nexport const startSaveFavoriteCharacter = (characterId) => {\n  toast.loading('Save...')\n  return async (dispatch, getState) => {\n    const { uid } = getState().auth\n\n    await db.doc(`${uid}/rick-and-morty/characters/favorites-characters-id/`).update({\n      ids: firebase.firestore.FieldValue.arrayUnion(characterId)\n    })\n\n    dispatch(refreshFavoritesCharacters(characterId))\n    toast.dismiss()\n    toast.success('Favorite saved')\n  }\n}\n\nexport const refreshFavoritesCharacters = (character) => ({\n  type: types.charactersFavoritesRefresh,\n  payload: character\n})\n\nexport const startLoadFavoritesCharacters = (uid) => {\n  return async (dispatch) => {\n    let favoritesCharacters = await loadFavorites(uid)\n    if (Object.keys(favoritesCharacters).length === 0) {\n      await db.doc(`${uid}/rick-and-morty/characters/favorites-characters-id/`).set({ ids: [] }, { merge: true })\n      favoritesCharacters = await loadFavorites(uid)\n      dispatch(setFavoritesCharacters(favoritesCharacters))\n    }\n    dispatch(setFavoritesCharacters(favoritesCharacters))\n  }\n}\n\nexport const setFavoritesCharacters = (favoritesCharacters) => ({\n  type: types.charactersLoadFavorites,\n  payload: favoritesCharacters\n})\n\nexport const startDeleteFavoriteCharacter = (characterId) => {\n  toast.loading('Deleting Favorite...')\n  return async (dispatch, getState) => {\n    const { uid } = getState().auth\n\n    await db.doc(`${uid}/rick-and-morty/characters/favorites-characters-id/`).update({\n      ids: firebase.firestore.FieldValue.arrayRemove(characterId)\n    })\n    dispatch(deleteFavoriteCharacter(characterId))\n    toast.dismiss()\n    toast.success('Favorite Deleted')\n  }\n}\n\nexport const deleteFavoriteCharacter = (id) => ({\n  type: types.charactersUndoFavorite,\n  payload: id\n})\n\nexport const activeCharacter = (id, character) => ({\n  type: types.charactersActive,\n  payload: {\n    id,\n    character\n  }\n})\n\nexport const setSearches = (searches) => ({\n  type: types.charactersSetSearch,\n  payload: searches\n})\n","import toast from 'react-hot-toast';\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config'\nimport { types } from \"../types/types\";\nimport { finishLoading, setError, startLoading } from './ui';\n\nexport const startLoginEmailPassword = (email, password) => {\n  return (dispatch) => {\n    dispatch(startLoading())\n    firebase.auth().signInWithEmailAndPassword(email, password)\n      .then(({ user }) => {\n        dispatch(login(user.uid, user.displayName))\n        dispatch(finishLoading())\n        toast.success('Success!')\n      })\n      .catch(({ message }) => {\n        dispatch(setError(message))\n        dispatch(finishLoading())\n        toast.error(`${message}`)\n        console.log(message);\n      })\n  }\n}\n\nexport const startLoginWithGoogle = () => {\n  return (dispatch) => {\n    dispatch(startLoading())\n    firebase.auth().signInWithPopup(googleAuthProvider)\n      .then(({ user }) => {\n        dispatch(login(user.uid, user.displayName))\n        toast.success('Success!')\n        dispatch(finishLoading())\n      })\n      .catch(({ message }) => {\n        dispatch(finishLoading())\n        dispatch(setError(message))\n        toast.error(`${message}`)\n      })\n  }\n}\n\nexport const startRegisterEmailPassword = (email, password, name) => {\n\n  return async (dispatch) => {\n    dispatch(startLoading())\n    firebase.auth().createUserWithEmailAndPassword(email, password)\n      .then(async ({ user }) => {\n        await user.updateProfile({ displayName: name })\n        dispatch(login(user.uid, user.displayName))\n        toast.success('Success!')\n        dispatch(finishLoading())\n      })\n      .catch(({ message }) => {\n        dispatch(finishLoading())\n        dispatch(setError(message))\n        toast.error(`${message}`)\n      })\n  }\n}\n\nexport const startLogout = () => {\n  return (dispatch) => {\n    firebase.auth().signOut()\n      .then(() => {\n        dispatch(logout())\n        toast.success(`logout successful!`)\n      })\n  }\n}\n\nexport const login = (uid, displayName) => ({\n  type: types.login,\n  payload: {\n    uid,\n    displayName,\n    logged: true\n  }\n})\n\nexport const logout = () => ({\n  type: types.logout,\n  payload: {\n    logged: false\n  }\n})","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Route } from 'react-router'\n\nexport const PublicRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route {...rest}\n      component={(props) => (\n        <Component {...props} />\n      )}\n    />\n\n  )\n}\n\nPublicRoute.propTypes = {\n  isLogged: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired\n}","import React from 'react'\nimport { Redirect } from 'react-router'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Transition } from '@headlessui/react'\nimport {\n  HeartIcon,\n  ArrowLeftIcon,\n  BanIcon\n} from '@heroicons/react/solid'\nimport { startDeleteFavoriteCharacter, startSaveFavoriteCharacter } from '../../actions/characters'\nimport { checkDuplicate } from '../../helpers/checkDuplicate'\n\nconst CharacterScreen = ({ history }) => {\n\n  const dispatch = useDispatch()\n\n  const { logged } = useSelector(state => state.auth)\n  const { active, favorites } = useSelector(state => state.characters)\n  const { loading } = useSelector(state => state.ui)\n\n  const checkingFavorite = checkDuplicate(favorites, active)\n\n  if (!active) {\n    return <Redirect to=\"/home\" />\n  }\n\n  const { character } = active\n\n  const handleFavorite = () => {\n    dispatch(startSaveFavoriteCharacter(active.id))\n  }\n\n  const handleUndoFavorite = () => {\n    dispatch(startDeleteFavoriteCharacter(active.id))\n  }\n\n  return (\n    <div className=\"sm:h-screen transition delay-150 duration-700 ease-in  justify-items-center grid sm:grid-cols-1  \">\n      <div className=\" flex justify-center mt-12 self-center\">\n        <Transition\n          as=\"div\"\n          className=\"max-w-xs md:max-w-4xl h-2/3 flex md:flex-row flex-col my-5\"\n          show={!loading}\n          enter=\"transition ease-in duration-500 \"\n          enterFrom=\" opacity-0\"\n          enterTo=\"opacity-100 \"\n        >\n          <img className=\"w-full h-72 sm:h-auto bg-white lg:block bg-cover rounded-t-lg md:rounded-t-none md:rounded-l-lg\"\n            src={character.urlImage}\n            alt=\"Sunset in the mountains\"\n          />\n          <div className=\"w-full bg-white p-5 rounded-b-lg md:rounded-b-none md:rounded-r-lg\">\n            <div className=\"px-2 sm:py-4\">\n              <div className=\"flex center justify-between  mb-2 capitalize\">\n                <p className=\"font-extrabold mr-4 items-center text-base md:text-2xl \">{character.name}</p>\n                <div className=\"flex items-center text-sm capitalize\">\n                  <p className=\"text-gray-400 font-bold \">status:</p>\n                  <p className=\"text-green-400 font-extrabold ml-1\" >{character.status}</p>\n                </div>\n              </div>\n              <div className=\"flex flex-col text-grey-darker text-sm md:text-xl capitalize font-light \">\n                <p><strong>Species:</strong> {character.species}   </p>\n                <p><strong>Gender:</strong> {character.gender} </p>\n                <p><strong>Origin:</strong> {character.origin} </p>\n                <p><strong>Location:</strong> {character.location} </p>\n                <p><strong>First appearance in the series:</strong> S01E01 December 2, 2013 </p>\n                <p><strong>number of times it appeared:</strong> {character.episode} </p>\n              </div>\n            </div>\n            <div className=\"flex items-center justify-between sm:py-4 sm:mt-10 \">\n              <button\n                onClick={() => history.goBack()}\n                className=\"w-1/2 sm:w-full flex place-content-center focus:outline-none bg-white transitionHover hover:bg-gray-200  rounded-full px-3 py-2 text-sm font-medium mr-2 border-2 border-gray-200\"\n              >\n                <ArrowLeftIcon className=\"flex self-center h-4 w-6 \" />\n                Back\n              </button>\n              {!checkingFavorite\n                ? (<button\n                  className=\"w-1/2 sm:w-full flex place-content-center focus:outline-none bg-blue-logo transitionHover hover:bg-opacity-70 disabled:opacity-50 text-white rounded-full px-3 py-2 text-sm font-medium mr-2 \"\n                  disabled={!logged}\n                  onClick={handleFavorite}\n                >\n                  <HeartIcon className=\"flex h-5 w-6\" />\n                Favorite\n                </button>)\n                : (<button\n                  className=\"w-1/2 sm:w-full items-center flex place-content-center focus:outline-none bg-blue-logo transitionHover hover:bg-opacity-70 disabled:opacity-50 text-white rounded-full px-3 sm:py-2 text-sm font-medium mr-2 \"\n                  disabled={!logged}\n                  onClick={handleUndoFavorite}\n                >\n                  <BanIcon className=\"flex h-5 w-6\" />\n                Undo Favorite\n                </button>)\n              }\n\n            </div>\n          </div>\n        </Transition>\n      </div>\n    </div>\n  )\n}\n\n\nexport default CharacterScreen\n","\n\nexport const checkDuplicate = (favorites, active) => {\n  if (favorites.ids?.lenght !==0) {\n    let checker = favorites.ids?.find(favorite => (\n      favorite === active.id\n    ))\n    return checker\n  } else {\n    return null\n  }\n}","export const API_URL = \"https://rickandmortyapi.com/api\"","import { useEffect, useState } from \"react\"\nimport PropTypes from 'prop-types'\n\nconst useFetch = (url, params) => {\n  const [state, setState] = useState({ data: null, loading: true, error: null })\n\n  useEffect(() => {\n    return () => {\n      setState({ data: null, loading: true })\n    }\n  }, [])\n\n  useEffect(() => {\n    if (params) {\n      console.log(`${url}?${params.toString()}`);\n      fetch(`${url}?${params.toString()}`)\n        .then(res => res.json())\n        .then(data => {\n          setState({\n            data: data,\n            loading: false,\n            error: data?.error\n          })\n        })\n        .catch((err) => {\n          setState({\n            data: null,\n            loading: false,\n            error: 'No se pudo cargar la informacion'\n          })\n        })\n    } else {\n      fetch(url)\n        .then(res => res.json())\n        .then(data => {\n          setState({\n            data: data,\n            loading: false,\n            error: null\n          })\n        })\n        .catch((err) => {\n          setState({\n            data: null,\n            loading: false,\n            error: 'No se pudo cargar la informacion'\n          })\n        })\n    }\n\n  }, [url, params])\n\n  return state\n}\n\nuseFetch.propTypes = {\n  url: PropTypes.string.isRequired,\n  params: PropTypes.string.isRequired\n}\n\n\nexport default useFetch","export default __webpack_public_path__ + \"static/media/defaultImageCard.049210b4.jpeg\";","import React from 'react'\nimport { Transition } from '@headlessui/react'\nimport defaultImageCard from '../../assets/images/defaultImageCard.jpeg'\n\nimport '../../styles/components/home.css'\n\nconst LoadingPreviewCards = ({ show }) => {\n\n  const cardsPreviews = [1, 2, 3, 4, 5, 6, 7, 8]\n\n  return (\n    <div className=\"characters-cards-container\">\n      {cardsPreviews.map(card => (\n        <Transition\n          as=\"div\"\n          show={show}\n          enter=\"transition ease-in duration-500 \"\n          enterFrom=\"opacity-0 scale-95\"\n          enterTo=\"opacity-100 scale-100 \"\n          leave=\"transition ease-out duration-500\"\n          leaveFrom=\"transform opacity-100 scale-100\"\n          leaveTo=\"transform opacity-0 scale-105\"\n        >\n          <div className=\"character-card-container \">\n            <div className=\"animate-pulse\" >\n              <img src={defaultImageCard} className=\"character-card-image bg-blue-logo rounded h-72 \" alt=\"#\" />\n              <div className=\"character-card-body\">\n                <div className=\"character-card-header mb-4\">\n                  <div className=\"pt-0 bg-gray-300 rounded w-24 h-6 \"></div>\n                  <div className=\"flex text-sm capitalize mt-1 w-16 h-5  bg-gray-300 rounded\">\n                    <div className=\"text-gray-400 font-bol \"></div>\n                    <div className=\" font-extrabold ml-1\"></div>\n                  </div>\n                </div>\n                <div className=\"character-card-main \">\n                  <div className=\"bg-gray-300 rounded mb-1 w-full h-5\"></div>\n                  <div className=\"bg-gray-300 rounded mb-1 w-full h-5\"></div>\n                  <div className=\"bg-gray-300 rounded mb-1 w-full h-5\"></div>\n                </div>\n              </div>\n              <div className=\"px-6 py-4\">\n                <div\n                  className=\"btn-cards h-9 \"\n                >\n                </div>\n              </div>\n            </div>\n          </div>\n        </Transition>\n      ))}\n    </div>\n  )\n}\n\nexport default LoadingPreviewCards\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { NavLink } from 'react-router-dom'\nimport { Transition } from '@headlessui/react'\nimport { activeCharacter } from '../../actions/characters'\nimport { finishLoading, startLoading } from '../../actions/ui'\n\nimport '../../styles/components/home.css'\nimport LoadingPreviewCards from '../loading/LoadingPreviewCards'\n\nconst CharacterCard = ({\n  id,\n  name,\n  status,\n  species,\n  gender,\n  urlImage,\n  origin,\n  location,\n  episode,\n  loadingCards\n}) => {\n\n  const dispatch = useDispatch()\n\n  const handleActiveCharacter = () => {\n    dispatch(startLoading())\n    dispatch(activeCharacter(id, { name, status, species, gender, urlImage, origin, location, episode }))\n    dispatch(finishLoading())\n  }\n\n\n  return (\n    <>\n      {loadingCards && <LoadingPreviewCards show={true} />}\n      <Transition\n        as=\"div\"\n        onClick={handleActiveCharacter}\n        show={!loadingCards}\n        enter=\"transition ease-out duration-500 \"\n        enterFrom=\"opacity-0 scale-95\"\n        enterTo=\"opacity-100 scale-100 \"\n      >\n        <div className=\"character-card-container\">\n          <NavLink to={`/character/${id}`}>\n            <img\n              className=\"character-card-image transitionHover transform-none sm:group-hover:transform sm:group-hover:scale-105 h-72\"\n              src={urlImage}\n              alt={name}\n            />\n            <div className=\"character-card-body\">\n              <div className=\"character-card-header\">\n                <p className=\"font-extrabold text-base md:text-lg pt-0 \">{name}</p>\n                <div className=\"flex text-sm capitalize mt-1 \">\n                  <p className=\"text-gray-400 font-bold \">status:</p>\n                  <p className={status === \"Alive\" ? \"text-green-400 font-extrabold ml-1\" : \"text-red-400 font-extrabold ml-1\"} >{status}</p>\n                </div>\n              </div>\n              <div className=\"character-card-main text-grey-darker\">\n                <p><strong>Species:</strong> {species}  </p>\n                <p><strong>Gender:</strong> {gender}   </p>\n                <p><strong>Origin:</strong> {origin} </p>\n              </div>\n            </div>\n            <div className=\"px-6 py-4\">\n              <button\n                className=\"btn-cards transitionHover\"\n              >\n                Show More\n            </button>\n            </div>\n          </NavLink>\n        </div>\n      </Transition>\n    </>\n  )\n}\n\nexport default CharacterCard\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport CharacterCard from './CharacterCard'\n\nconst CharactersCards = ({\n  homeCharacters,\n  favoritesCharacters,\n  searchCharacter,\n  loadingCards,\n  data,\n  error,\n  favorites\n}) => {\n\n  const history = useHistory()\n\n  const { characters } = useSelector(state => state.characters)\n\n  if (characters && homeCharacters) {\n    return (\n      <div className=\"characters-cards-container\">\n        {\n          characters.map(character => (\n            <CharacterCard\n              key={character.id}\n              id={character.id}\n              name={character.name}\n              status={character.status}\n              species={character.species}\n              gender={character.gender}\n              urlImage={character.image}\n              origin={character.origin.name}\n              location={character.location.name}\n              episode={character.episode.length}\n              loadingCards={loadingCards}\n            />\n          ))\n        }\n      </div>\n    )\n  }\n\n  if ((favorites?.ids.length > 0 && data && favoritesCharacters) || (searchCharacter && data)) {\n    return (\n      <div className=\"characters-cards-container\">\n        {Array.isArray(data) ?\n          data.map(character => (\n            <CharacterCard\n              key={character.id}\n              id={character.id}\n              name={character.name}\n              status={character.status}\n              species={character.species}\n              gender={character.gender}\n              urlImage={character.image}\n              origin={character.origin.name}\n              location={character.location.name}\n              episode={character.episode.length}\n              loadingCards={loadingCards}\n            />\n          ))\n          :\n          <CharacterCard\n            key={data.id}\n            id={data.id}\n            name={data.name}\n            status={data.status}\n            species={data.species}\n            gender={data.gender}\n            urlImage={data.image}\n            origin={data.origin.name}\n            location={data.location.name}\n            episode={data.episode.length}\n            loadingCards={loadingCards}\n          />\n        }\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"flex w-screen h-screen justify-center items-center\">\n      <div className=\" flex w-3/4 p-32 justify-center text-white rounded-xl bg-gray-800\">\n        <div className=\"flex flex-col\">\n          <div className=\"flex text-center mb-2 capitalize\">\n            <p className=\"font-extrabold items-center text-base md:text-2xl \">{error ? error : \"You don't have any favorite characters added, try adding one!\"}</p>\n          </div>\n          <div className=\"flex justify-center mt-6\">\n            <button\n              className=\"btn\"\n              onClick={() => history.push(\"/home\")}\n            >\n              Go to Home\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n\n\n}\n\nexport default CharactersCards\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Redirect } from 'react-router'\nimport { API_URL } from '../../constants'\nimport useFetch from '../../hooks/useFetch'\nimport CharactersCards from '../characters/CharactersCards'\n\nconst FavoritesScreen = ({ history }) => {\n\n  const { logged } = useSelector(state => state.auth)\n  const { favorites } = useSelector(state => state.characters)\n\n  let url = favorites.ids?.length > 0 && `${API_URL}/character/${favorites?.ids}`\n\n  const { data, loading } = useFetch(url)\n\n  if (!logged) {\n    return (\n      <Redirect to=\"/home\" />\n    )\n  }\n\n  return (\n    <div className=\"py-16 h-screen\">\n      <div className=\"flex flex-col justify-center overflow-auto scrollbar ml-4 sm:ml-0\">\n        {!loading &&\n          <CharactersCards\n            favoritesCharacters={true}\n            data={data}\n            favorites={favorites}\n          />\n        }\n      </div>\n    </div>\n  )\n\n\n\n}\n\nexport default FavoritesScreen\n","import React, { useEffect, useState } from 'react'\nimport ReactPaginate from 'react-paginate'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { loadCharacters } from '../../actions/characters'\nimport { setActivePage } from '../../actions/pages'\nimport { API_URL } from '../../constants'\nimport useFetch from '../../hooks/useFetch'\n\nconst Pagination = ({ setLoadingCards }) => {\n\n  const dispatch = useDispatch()\n  const { activePage } = useSelector(state => state.pages)\n\n  const url = `${API_URL}/character/`\n\n  const [params, setParams] = useState(new URLSearchParams({ page: activePage }))\n  const { data, error } = useFetch(url, params)\n\n  useEffect(() => {\n    if (data) {\n      setLoadingCards(false)\n      dispatch(loadCharacters(data, error))\n    }\n  }, [data, error, dispatch, setLoadingCards])\n\n  const handlePageChange = (newPage) => {\n    setLoadingCards(true)\n    let selected = newPage.selected + 1\n    setParams(new URLSearchParams({ page: selected }))\n    dispatch(setActivePage(selected))\n  }\n\n  return (\n    <div className=\"pagination-container mt-20 mb-2 shadow-xl\">\n      <ReactPaginate\n        initialPage={activePage - 1}\n        previousLabel={'Previous'}\n        previousClassName=\"pagination-navigation-btn\"\n        nextLabel={'Next'}\n        nextClassName=\"pagination-navigation-btn\"\n        breakLabel={'...'}\n        pageClassName=\"pagination-page\"\n        activeClassName=\"pagination-active-btn\"\n        containerClassName=\"flex flex-row self-center my-2 \" \n        pageCount={data?.info.pages}\n        marginPagesDisplayed={1}\n        pageRangeDisplayed={3}\n        onPageChange={handlePageChange}\n      />\n    </div>\n  )\n}\n\nexport default Pagination\n","import { types } from \"../types/types\"\n\nexport const setActivePage = (activePage) => ({\n  type: types.pagesActive,\n  payload: activePage\n})","import React, { useState } from 'react'\nimport CharactersCards from '../characters/CharactersCards'\nimport Pagination from '../ui/Pagination'\n\nimport '../../styles/components/home.css'\nimport LoadingPreviewCards from '../loading/LoadingPreviewCards'\n\nconst HomeScreen = () => {\n\n  const [loadingCards, setLoadingCards] = useState(false)\n\n  return (\n    <>\n      <div className=\"main-container  scrollbar \">\n        <div className=\"home-container flex flex-col justify-center -mb-14 h-screen ml-4 sm:ml-0\">\n          <Pagination setLoadingCards={setLoadingCards} />\n          {!loadingCards ?\n            <CharactersCards homeCharacters={true} />\n            :\n            <LoadingPreviewCards show={true}/>\n          }\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default HomeScreen\n","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Redirect } from 'react-router'\nimport { API_URL } from '../../constants'\nimport useFetch from '../../hooks/useFetch'\nimport CharactersCards from '../characters/CharactersCards'\nimport LoadingPreviewCards from '../loading/LoadingPreviewCards'\n\nconst SearchScreen = () => {\n\n  const url = `${API_URL}/character/`\n\n  const { searches } = useSelector(state => state.characters)\n  const [params] = useState(new URLSearchParams({ name: searches }))\n  const { data, error, loading } = useFetch(url, params)\n\n  if (searches === \"\") {\n    return <Redirect to=\"/home\" />\n  }\n\n  return (\n    <div className=\"py-16 h-screen\">\n      <div className=\"flex flex-col justify-center overflow-auto scrollbar ml-4  sm:ml-0\">\n        {!loading ?\n          <CharactersCards\n            searchCharacter={true}\n            data={data.results}\n            error={error}\n          />\n          :\n          <LoadingPreviewCards show={true} />\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default SearchScreen\n","import React, { useState } from 'react'\nimport { Disclosure, Transition } from '@headlessui/react'\nimport { useDispatch } from 'react-redux'\nimport { setSearches } from '../../actions/characters'\nimport { Redirect } from 'react-router'\n\n\nconst SearchButton = ({ setIsShowing }) => {\n\n  const dispatch = useDispatch()\n  const [value, setValue] = useState(\"\")\n  const [isShow, setIsShow] = useState(false)\n\n  const handleOnSearch = (e) => {\n    const { key, type } = e\n    if ((key === \"Enter\" || type === \"click\") && (value !== \"\")) {\n      dispatch(setSearches(value))\n      setIsShow(true)\n    }\n  }\n\n  if (isShow) {\n    return <Redirect to=\"/searches\" />\n  }\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        onClick={handleOnSearch}\n        className=\"hidden absolute p-2 inset-y-3 right-2 md:inline-flex  items-center focus:outline-none text-gray-400 rounded-3xl cursor-pointer transitionHover hover:text-white  hover:bg-gray-700  focus:ring-0 focus:ring-inset focus:ring-white\"\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"block h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n        </svg>\n      </button>\n      <div className=\"hidden absolute p-2 inset-y-3 right-2 mr-8 sm:inline-flex items-center focus:outline-none text-gray-400 rounded-3xl cursor-pointer transitionHover focus:ring-1 focus:ring-red\">\n        <input\n          type=\"search\"\n          name=\"search\"\n          value={value}\n          placeholder=\"Search character\"\n          onChange={(e) => setValue(e.target.value)}\n          onKeyPress={handleOnSearch}\n          className=\"bg-white h-10 px-5 pr-2 md:pr-1 lg:pr-10 rounded-full text-sm  transition duration-300 focus:outline-none focus:ring focus:ring-blue-logo\"\n        />\n      </div>\n      <Disclosure>\n        {({ open }) => (\n          <>\n            <Disclosure.Button\n              type=\"button\"\n              className=\"absolute p-2 inset-y-3 right-2 inline-flex  items-center focus:outline-none text-gray-400 rounded-3xl cursor-pointer transitionHover hover:text-white  hover:bg-gray-700  focus:ring-0 focus:ring-inset focus:ring-white\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"block h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n              </svg>\n            </Disclosure.Button>\n            <Transition\n              show={open}\n              as=\"div\"\n              enter=\"transition ease-out duration-500 \"\n              enterFrom=\"transform opacity-0 scale-95\"\n              enterTo=\"transform opacity-100 scale-100\"\n              leave=\"transition ease-in duration-75\"\n              leaveFrom=\"transform opacity-100 scale-100\"\n              leaveTo=\"transform opacity-0 scale-95\"\n            >\n              <Disclosure.Panel className=\"flex justify-center sm:hidden\">\n                <div className=\"bg-gray-800 relative flex items-center justify-center h-12  pl-2 bottom-2  w-full sm:hidden\">\n                  <input\n                    type=\"search\"\n                    name=\"search\"\n                    placeholder=\"Search\"\n                    value={value}\n                    onChange={(e) => setValue(e.target.value)}\n                    onKeyPress={handleOnSearch}\n                    className=\"bg-white h-10 px-5 pr-10 rounded-full text-sm transition duration-300 focus:outline-none focus:ring focus:ring-blue-logo\"\n                  />\n                  <button\n                    onClick={handleOnSearch}\n                    className=\"absolute w-9 h-9 sm:h-10 sm:w-10 ml-60\"\n                  >\n                    <svg\n                      className=\"absolute w-2 h-2 mt-3 ml-3 sm:w-4 sm:h-4\"\n                      xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path fillRule=\"evenodd\" d=\"M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                    </svg>\n                  </button>\n                </div>\n              </Disclosure.Panel>\n            </Transition>\n          </>\n        )\n        }\n\n      </Disclosure>\n    </>\n  )\n}\n\nexport default SearchButton\n","import React from 'react'\nimport { Disclosure, Transition } from '@headlessui/react'\nimport { Link, NavLink } from 'react-router-dom'\n\nconst MenuPanel = ({\n  classNames,\n  navigation,\n  isShowing,\n  logged,\n  handleLogout\n}) => {\n  return (\n    <Disclosure.Panel as=\"div\" className=\"md:hidden bg-gray-800 \" >\n      <Transition\n        show={isShowing}\n        className=\"block\"\n        as=\"div\"\n        enter=\"transition ease-in duration-200 \"\n        enterFrom=\"transform opacity-0 scale-105\"\n        enterTo=\"transform opacity-100 scale-100\"\n      >\n        <div className=\"px-2 pt-2 pb-3 space-y-1\">\n          {navigation.map((item, index) => (\n            <div key={index} >\n              {item.isLogged === false ? (\n                <div>\n                  <NavLink\n                    key={item.name}\n                    to={item.link}\n                    className={classNames(\n                      item.current ? 'bg-gray-900 text-white' : 'text-gray-600 flex flex-col  disabled:opacity-50',\n                      'px-2 py-2 rounded-md text-sm font-medium'\n                    )}\n                    aria-current={item.current ? 'page' : undefined}\n                  >\n                    <div className=\"flex\" >\n                      {item.icon}\n                      {item.name}\n                      <p className=\"text-xs flex items-center font-light text-gray-600 pl-1 \"> Need authentication</p>\n                    </div>\n                  </NavLink>\n                </div>) : (\n                <div >\n                  <NavLink\n                    key={item.name}\n                    to={item.link}\n                    className={classNames(\n                      item.current ? 'bg-gray-900 text-white' : 'flex text-gray-300 hover:bg-gray-700 hover:text-white',\n                      'block px-2 py-2 rounded-md text-base font-medium'\n                    )}\n                    aria-current={item.current ? 'page' : undefined}\n                  >\n                    {item.icon}\n                    {item.name}\n                  </NavLink>\n                </div>)\n              }\n            </div>\n          ))}\n          <div className=\"flex justify-center\">\n            {logged ? (\n              <button className=\"btn rounded-md w-20 flex flex-col place-content-center items-center \" onClick={handleLogout}>\n                Logout\n              </button>\n            ) : (\n              <Link className=\"btn rounded-md w-20 flex flex-col place-content-center items-center \" to=\"/auth/login\">\n                Login\n              </Link>\n            )\n            }\n          </div>\n        </div>\n      </Transition>\n    </Disclosure.Panel>\n  )\n}\n\nexport default MenuPanel\n","export default __webpack_public_path__ + \"static/media/rick-and-morty-app.84820ac9.png\";","import React, { createRef, useState } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { Disclosure } from '@headlessui/react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLogout } from '../../actions/auth'\nimport {\n  HomeIcon,\n  InformationCircleIcon,\n  HeartIcon,\n  XIcon,\n  MenuIcon\n} from '@heroicons/react/solid'\nimport { createPopper } from \"@popperjs/core\";\nimport SearchButton from './SearchButton'\nimport MenuPanel from './MenuPanel'\nimport logo from '../../assets/images/rick-and-morty-app.png'\n\nimport '../../styles/components/home.css'\n\nconst NavBar = () => {\n\n  const dispatch = useDispatch()\n  const { logged } = useSelector(state => state.auth)\n\n  const [isShowing, setIsShowing] = useState(false)\n  const [popoverShow, setPopoverShow] = useState(false)\n  const btnRef = createRef()\n  const popoverRef = createRef()\n\n  const openPopover = () => {\n    createPopper(btnRef.current, popoverRef.current, {\n      placement: \"bottom\"\n    })\n    setPopoverShow(true)\n  }\n\n  const closePopover = () => {\n    setPopoverShow(false)\n  }\n\n\n  const navigation = [\n    { name: 'Home', link: \"/home\", current: false, isLogged: null, icon: <HomeIcon className=\"flex sm:hidden lg:flex h-5 w-6\" /> },\n    { name: 'Favorites', link: \"/favorites\", current: false, isLogged: logged, icon: <HeartIcon className=\"flex sm:hidden lg:flex h-5 w-6\" /> },\n    { name: 'About us', link: '#', current: false, isLogged: null, icon: <InformationCircleIcon className=\"flex sm:hidden lg:flex h-5 w-6\" /> },\n  ]\n\n  function classNames(...classes) {\n    return classes.filter(Boolean).join(' ')\n  }\n\n  const handleLogout = (e) => {\n    e.preventDefault()\n    dispatch(startLogout())\n  }\n\n  return (\n    <Disclosure as=\"nav\" className=\"bg-gray-800 h-16 fixed left-0 right-0 top-0 \" >\n      {({ open }) => (\n        <>\n          <div className=\"max-w-7xl px-2 sm:px-2 lg:px-8 \">\n            <div className=\"relative flex items-center justify-evenly h-16\">\n              <div className=\"absolute inset-y-0 left-0 flex items-center md:hidden \">\n                <Disclosure.Button\n                  type=\"button\"\n                  className=\"transitionHover inline-flex items-center justify-center p-2 rounded-3xl text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-0 focus:ring-inset focus:ring-white\"\n                  aria-controls=\"mobile-menu\"\n                  aria-expanded=\"false\"\n                >\n                  {open ? (\n                    <XIcon onClick={setIsShowing(true)} className=\"block h-6 w-6\" />\n\n                  ) : (\n                    <MenuIcon onClick={setIsShowing(false)} className=\"block h-6 w-6\" />\n                  )\n                  }\n                </Disclosure.Button>\n              </div>\n              <div className=\"flex-1 flex items-center justify-center  sm:items-stretch sm:justify-start sm:ml-12 lg:ml-0\">\n                <div className=\"flex items-center\">\n                  <img\n                    className=\"block h-28 w-auto\"\n                    src={logo}\n                    alt=\"rick-and-morty-app\"\n                  />\n                </div>\n                <div className=\"hidden self-center md:block sm:ml-3  \">\n                  <div className=\"flex md:space-x-0 lg:space-x-4 items-center\">\n                    {navigation.map((item) => (\n                      <div>\n                        {item.isLogged === false ?\n                          <div className=\"w-full text-center\">\n                            <button\n                              key={item.name}\n                              onClick={() => {\n                                popoverShow ? closePopover() : openPopover()\n                              }}\n                              ref={btnRef}\n                              className={classNames(\n                                item.current ? 'bg-gray-900 text-white flex flex-col place-content-center items-center disabled:opacity-50 ' : 'text-gray-600 focus:outline-none flex flex-col place-content-center items-center disabled:opacity-50',\n                                'px-2  rounded-md text-sm font-medium'\n                              )}\n                              aria-current={item.current ? 'page' : undefined}\n                            >\n                              <div className=\"flex flex-row\" >\n                                {item.icon}\n                                {item.name}\n                              </div>\n                            </button>\n                            <div\n                              className={\n                                (popoverShow ? \"\" : \"hidden \") +\n                                \"bg-gray-600 border-0 mt-3 block z-50 font-normal leading-normal text-sm max-w-xs text-left no-underline break-words rounded-lg\"\n                              }\n                              ref={popoverRef}\n                            >\n                              <div>\n                                <div\n                                  className=\"bg-gray-600 text-white opacity-75 font-semibold p-3 mb-0 border-b border-solid border-blueGray-100 uppercase rounded-t-lg\"\n                                >\n                                  Need authentication\n                                </div>\n                                <div className=\"text-white p-3\">\n                                  Click on the \"Login\" button to authenticate and access favorites\n                              </div>\n                              </div>\n                            </div>\n                          </div>\n                          : <NavLink\n                            onClick={() => item.current = true}\n                            key={item.name}\n                            to={item.link}\n                            className={classNames(\n                              item.current ? 'bg-gray-900 text-white' : 'flex text-gray-200 transitionHover hover:bg-gray-700 hover:text-white',\n                              'px-2 py-2 rounded-md text-sm font-medium'\n                            )}\n                            aria-current={item.current ? 'page' : undefined}\n                          >\n                            {item.icon}\n                            {item.name}\n                          </NavLink>\n                        }\n                      </div>\n                    ))}\n                    {logged ? (\n                      <button className=\"btn rounded-md w-20 flex flex-col place-content-center items-center \" onClick={handleLogout}>\n                        Logout\n                      </button>\n                    ) : (\n                      <NavLink\n                        className=\"btn rounded-md w-20 flex flex-col place-content-center items-center \"\n                        to=\"/auth/login\"\n                      >\n                        Login\n                      </NavLink>\n                    )\n                    }\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          {isShowing ?\n            <MenuPanel\n              classNames={classNames}\n              navigation={navigation}\n              isShowing={isShowing}\n              logged={logged}\n              handleLogout={handleLogout}\n            />\n            :\n            <SearchButton setIsShowing={setIsShowing} />\n          }\n        </>\n      )}\n    </Disclosure>\n  )\n}\n\nexport default NavBar\n","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport CharacterScreen from '../components/characters/CharacterScreen'\nimport FavoritesScreen from '../components/favorites/FavoritesScreen'\nimport HomeScreen from '../components/home/HomeScreen'\nimport SearchScreen from '../components/search/SearchScreen'\nimport NavBar from '../components/ui/NavBar'\n\n\n\nconst MainRouter = () => {\n  return (\n    <>\n      <NavBar />\n      < >\n        <Switch>\n          <Route exact path='/home' component={HomeScreen} />\n          <Route exact path='/favorites' component={FavoritesScreen} />\n          <Route exact path='/searches' component={SearchScreen} />\n          <Route exact path='/character/:id' component={CharacterScreen} />\n          <Redirect to='/home' />\n        </Switch>\n      </>\n    </>\n  )\n}\n\nexport default MainRouter","import { useState } from \"react\"\n\nconst useForm = (initialState = {}) => {\n\n  const [formValue, setFormValue] = useState(initialState)\n\n  const handleInputChange = ({ target }) => {\n    setFormValue({\n      ...formValue,\n      [target.name]: target.value\n    })\n  }\n\n  const reset = () => {\n    setFormValue(initialState)\n  }\n\n  return [formValue, handleInputChange, reset]\n}\n\nexport default useForm\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { ArrowLeftIcon } from '@heroicons/react/solid'\nimport { startLoginEmailPassword, startLoginWithGoogle } from '../../actions/auth'\nimport useForm from '../../hooks/useForm'\n\nimport '../../styles/components/buttons.css'\n\nconst LoginScreen = ({ history }) => {\n\n  const { loading } = useSelector(state => state.ui)\n\n  const dispatch = useDispatch()\n\n  const [formValues, handleInputChange] = useForm({\n    email: 'enzo@gmail.com',\n    password: '123456'\n  })\n\n  const { email, password } = formValues\n\n  const handleLogin = (e) => {\n    e.preventDefault()\n    dispatch(startLoginEmailPassword(email, password))\n  }\n\n  const handleGoogleLogin = (e) => {\n    e.preventDefault()\n    dispatch(startLoginWithGoogle())\n  }\n\n  return (\n    <div  >\n      <div className=\"auth-top-container\">\n        <button\n          className=\"auth-btn\"\n          onClick={() => history.goBack()}\n        >\n          <ArrowLeftIcon className=\"flex self-center h-5 w-6 \" />\n                Back\n        </button>\n        <h1 className=\"auth-title \">Login</h1>\n      </div>\n      <form \n      onSubmit={handleLogin}\n       className=\"flex flex-col items-center\">\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          name=\"email\"\n          autoComplete=\"off\"\n          className=\"auth-input\"\n          value={email}\n          onChange={handleInputChange}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          name=\"password\"\n          className=\"auth-input\"\n          value={password}\n          onChange={handleInputChange}\n        />\n        <button\n          type=\"submit\"\n          className=\"btn\"\n          disabled={loading}\n        >\n          Login\n        </button>\n        <div className=\"auth-social-networks font-bold\">\n          <p className=\"font-light\">Login with social networks</p>\n          <div\n            className=\"google-btn \"\n            onClick={handleGoogleLogin}\n          >\n            <div className=\"google-icon-wrapper\">\n              <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n            </div>\n            <p className=\"btn-text flex justify-center\">\n              <b >Sign in with google</b>\n            </p>\n          </div>\n          <Link\n            to=\"/auth/register\"\n            className=\"text-white transition duration-300 hover:text-gray-400 font\"\n          >\n            Create new account\n          </Link>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default LoginScreen\n","import React from 'react'\nimport toast from 'react-hot-toast'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport validator from 'validator'\nimport { startRegisterEmailPassword } from '../../actions/auth'\nimport { removeError, setError } from '../../actions/ui'\nimport useForm from '../../hooks/useForm'\n\nconst RegisterScreen = () => {\n\n  const { loading } = useSelector(state => state.ui)\n  const dispatch = useDispatch()\n\n  const [formValues, handleInputChange] = useForm({\n    name: 'enzo',\n    email: 'enzocolinecul@gmail.com',\n    password: '123456',\n    password2: '123456'\n  })\n\n  const { name, email, password, password2 } = formValues\n\n  let error = null\n\n  const handleRegister = (e) => {\n    e.preventDefault()\n    if (isFormValid()) {\n      dispatch(startRegisterEmailPassword(email, password, name))\n    }\n\n    if (!isFormValid()) {\n      dispatch(setError(error))\n      toast.error(`${error}`)\n    }\n  }\n\n  const isFormValid = () => {\n\n    if (name.trim().length === 0) {\n      error = 'Name is required'\n      return false\n    } else if (!validator.isEmail(email)) {\n      error = 'Email not valid'\n      return false\n    } else if (password.trim().length <= 5) {\n      error = 'The password must be greater than 6 digits'\n      return false\n    } else if (password !== password2) {\n      error = 'Passwords must match'\n      return false\n    }\n\n    dispatch(removeError())\n    return true\n  }\n\n  return (\n    <div >\n      <div className=\"auth-top-container\">\n        <h1 className=\"auth-title \">Register</h1>\n      </div>\n      <form onSubmit={handleRegister} className=\"flex flex-col items-center\" noValidate >\n        <input\n          type=\"text\"\n          placeholder=\"Name\"\n          name=\"name\"\n          autoComplete=\"off\"\n          className=\"auth-input\"\n          value={name}\n          onChange={handleInputChange}\n        />\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          name=\"email\"\n          autoComplete=\"off\"\n          className=\"auth-input\"\n          value={email}\n          onChange={handleInputChange}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          name=\"password\"\n          className=\"auth-input\"\n          value={password}\n          onChange={handleInputChange}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n          name=\"password2\"\n          className=\"auth-input\"\n          value={password2}\n          onChange={handleInputChange}\n        />\n        <button\n          type=\"submit\"\n          className=\"btn\"\n          disabled={loading}\n        >\n          Register\n      </button>\n        <div className=\"auth-social-networks font-bold\">\n          <Link\n            to=\"/auth/login\"\n            className=\"text-white transition duration-300 hover:text-gray-400 font\"\n          >\n            Already registered?\n        </Link>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default RegisterScreen\n","import React from 'react'\nimport { Transition } from '@headlessui/react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport LoginScreen from '../components/auth/LoginScreen'\nimport RegisterScreen from '../components/auth/RegisterScreen'\n\nimport '../styles/components/auth.css'\n\nconst AuthRouter = ({ ...rest }) => {\n\n  return (\n    <Transition\n      show={true}\n      as=\"div\"\n      enter=\"transition ease-out duration-500 \"\n      enterFrom=\" opacity-0 scale-95\"\n      enterTo=\"opacity-100 scale-100 \"\n    >\n      <div className=\"auth-main\">\n        <div className=\"auth-box-container\">\n          <Switch>\n            <Route\n              exact path=\"/auth/login\"\n              {...rest}\n              component={LoginScreen}\n            />\n            <Route\n              exact path=\"/auth/register\"\n              {...rest}\n              component={RegisterScreen}\n            />\n            <Redirect to=\"/auth/login\" />\n          </Switch>\n        </div>\n      </div>\n    </Transition>\n  )\n}\n\nexport default AuthRouter\n","export default __webpack_public_path__ + \"static/media/RickAndMortyLoadingImage1.5f3e56c3.png\";","export default __webpack_public_path__ + \"static/media/RickAndMortyLoadingImage2.f9f49119.png\";","import { Transition } from '@headlessui/react'\nimport React from 'react'\n\nimport rick from '../../assets/images/RickAndMortyLoadingImage1.png'\nimport morty from '../../assets/images/RickAndMortyLoadingImage2.png'\n\nconst LoadingScreen = ({ loading }) => {\n\n  return (\n    <Transition\n      show={loading}\n      as=\"div\"\n      enter=\"transition ease-in duration-500 \"\n      enterFrom=\"transform opacity-0 scale-105\"\n      enterTo=\"transform opacity-100 scale-100\"\n      leave=\"transition ease-out duration-500\"\n      leaveFrom=\"transform opacity-100 scale-100\"\n      leaveTo=\"transform opacity-0 scale-105\"\n    >\n      <div className=\"bg-gray-800 bg-none items-center justify-center flex-col h-screen flex bg-opacity-90 \">\n        <div className=\"flex items-center justify-center h-1/3\">\n          <img className=\"opacity-100 h-full animate-bounce flex-row flex\" src={rick} alt=\"loading\" />\n          <img className=\"opacity-100 h-full animate-bounceTest flex-row flex\" src={morty} alt=\"loading\" />\n        </div>\n        <h1 className=\"text-white text-opacity-100 mt-4 animate-pulse font-bold text-3xl\">Loading...</h1>\n      </div>\n    </Transition>\n  )\n}\n\nexport default LoadingScreen\n","import React, { useEffect, useState } from 'react'\nimport { Transition } from '@headlessui/react'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Toaster } from 'react-hot-toast'\nimport { firebase } from '../firebase/firebase-config'\nimport { finishLoading, startLoading } from '../actions/ui'\nimport { startLoadFavoritesCharacters } from '../actions/characters'\nimport { login } from '../actions/auth'\nimport { PublicRoute } from './PublicRoute'\nimport MainRouter from './MainRouter'\nimport AuthRouter from './AuthRouter'\nimport LoadingScreen from '../components/loading/LoadingScreen'\n\nconst Routers = () => {\n\n  const dispatch = useDispatch()\n  const { loading } = useSelector(state => state.ui)\n\n  const [checking, setChecking] = useState(true)\n  const [isLogged, setIsLogged] = useState(false)\n\n  useEffect(() => {\n    dispatch(startLoading())\n    firebase.auth().onAuthStateChanged(async (user) => {\n      if (user?.uid) {\n        dispatch(login(user.uid, user.displayName))\n        dispatch(startLoadFavoritesCharacters(user.uid))\n        dispatch(finishLoading())\n        setIsLogged(true)\n        setChecking(false)\n      } else {\n        dispatch(finishLoading())\n        setIsLogged(false)\n        setChecking(false)\n      }\n    })\n  }, [dispatch, setChecking, setIsLogged])\n\n\n  return (\n    <>\n      <LoadingScreen loading={loading} />\n      <Toaster position=\"bottom-center\" />\n      <Transition\n        show={!loading || checking}\n        enter=\"transition ease-out duration-500 \"\n        enterFrom=\" opacity-0 scale-95\"\n        enterTo=\"opacity-100 scale-100 \"\n      >\n        <Router>\n          <div  >\n            <Switch>\n              {!isLogged &&\n                <Route\n                  path=\"/auth\"\n                  component={AuthRouter}\n                />\n              }\n              <PublicRoute\n                path=\"/\"\n                component={MainRouter}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Transition>\n    </>\n  )\n}\nexport default Routers\n","import { types } from \"../types/types\";\n\nconst initialState = {\n  characters: [],\n  favorites: {},\n  searches: \"\",\n  active: null\n}\n\nexport const charactersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.charactersActive:\n      return {\n        ...state,\n        active: {\n          ...action.payload\n        }\n      }\n    case types.charactersLoadFavorites:\n      return {\n        ...state,\n        favorites: { ...action.payload }\n      }\n    case types.charactersFavoritesRefresh:\n      return {\n        ...state,\n        favorites: { ids: [...state.favorites.ids.concat(action.payload)] }\n      }\n    case types.charactersLoad:\n      return {\n        ...state,\n        characters: [...action.payload]\n      }\n    case types.charactersUndoFavorite:\n      return {\n        ...state,\n        favorites: {\n          ids: state.favorites.ids.filter(id => id !== action.payload)\n        }\n      }\n    case types.charactersSetSearch:\n      return {\n        ...state,\n        searches: action.payload\n      }\n    default:\n      return state\n  }\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n  activePage: 1\n}\n\nexport const pagesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.pagesActive:\n      return {\n        activePage: action.payload\n      } \n    default:\n      return state\n  }\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n  loading: false,\n  msgError: null\n}\n\nexport const uiReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.uiSetError:\n      return {\n        ...state,\n        msgError: action.payload\n      }\n    case types.uiRemoveError:\n      return {\n        ...state,\n        msgError: null\n      }\n    case types.uiStartLoading:\n      return {\n        ...state,\n        loading: true\n      }\n    case types.uiFinishLoading:\n      return {\n        ...state,\n        loading: false\n      }\n    default:\n      return state;\n  }\n}","import { applyMiddleware, combineReducers, compose, createStore } from 'redux'\nimport thunk from 'redux-thunk'\nimport { authReducer } from '../reducers/authReducer'\nimport { charactersReducer } from '../reducers/charactersReducer';\nimport { pagesReducer } from '../reducers/pagesReducer';\nimport { uiReducer } from '../reducers/uiReducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst reducers = combineReducers({\n  auth: authReducer,\n  ui: uiReducer,\n  characters: charactersReducer,\n  pages: pagesReducer\n})\n\nexport const store = createStore(\n  reducers,\n  composeEnhancers(\n    applyMiddleware(thunk)\n  )\n)","import { types } from \"../types/types\";\n\nexport const authReducer = (state = {logged:false}, action) => {\n  switch (action.type) {\n    case types.login:\n      return {\n        uid: action.payload.uid,\n        name: action.payload.displayName,\n        logged: action.payload.logged\n      }\n    case types.logout:\n      return {\n        logged: action.payload.logged\n      }\n    default:\n      return state\n  }\n}","import React from 'react';\nimport AppRouter from './routers/AppRouter';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\nconst App = () => {\n  \n  return (\n    <Provider store={store}>\n       <AppRouter />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"tailwindcss/tailwind.css\"\nimport \"./styles/index.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}